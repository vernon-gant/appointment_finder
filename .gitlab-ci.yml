stages:
  - lint
  - test
  - build
  - deploy

variables:
  PHP_VERSION: "8.1"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_VERSION: "24.0.7"
  DOCKER_IN_DOCKER_IMAGE: "docker:${DOCKER_VERSION}-dind"
  FRONTEND_IMAGE_TAG: "$DOCKER_HUB_USERNAME/frontend:$CI_COMMIT_REF_SLUG"
  BACKEND_IMAGE_TAG: "$DOCKER_HUB_USERNAME/backend:$CI_COMMIT_REF_SLUG"
  NGINX_IMAGE_TAG: "$DOCKER_HUB_USERNAME/nginx:$CI_COMMIT_REF_SLUG"

lint:
  stage: lint
  image: php:${PHP_VERSION}
  script:
    - apt-get update -yqq
    - apt-get install -yqq git unzip
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - cd backend
    - composer install --prefer-dist --no-scripts --no-interaction --optimize-autoloader
    - ./vendor/bin/php-cs-fixer fix . --show-progress=dots --dry-run --diff --verbose --ansi
  only:
    - merge_requests
    - main
    - dev

test:backend:
  stage: test
  image: php:${PHP_VERSION}
  before_script:
    - apt-get update && apt-get install -y libzip-dev unzip git
    - docker-php-ext-install pdo pdo_mysql
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - cd backend
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress
  script:
    - vendor/bin/phpunit
  only:
    - branches

build_frontend:
  stage: build
  image: docker:${DOCKER_VERSION}
  services:
    - $DOCKER_IN_DOCKER_IMAGE
  before_script:
    - echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - cd frontend
    - docker build -t $FRONTEND_IMAGE_TAG .
    - docker push $FRONTEND_IMAGE_TAG

build_nginx:
  stage: build
  image: docker:${DOCKER_VERSION}
  services:
    - $DOCKER_IN_DOCKER_IMAGE
  before_script:
    - echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - cd backend/docker/prod/nginx
    - docker build -t $NGINX_IMAGE_TAG .
    - docker push $NGINX_IMAGE_TAG

build_backend:
  stage: build
  image: docker:${DOCKER_VERSION}
  services:
    - $DOCKER_IN_DOCKER_IMAGE
  before_script:
    - echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - cd backend
    - docker build -t $BACKEND_IMAGE_TAG -f ./docker/prod/php-fpm/Dockerfile .
    - docker push $BACKEND_IMAGE_TAG